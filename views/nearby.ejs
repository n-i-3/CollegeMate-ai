<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Nearby Places</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #f8f9fa;
      margin: 0;
      padding: 1.5rem;
    }

    h1 {
      text-align: center;
      color: #007bff;
      margin-bottom: 1rem;
    }

    #type-select {
      display: block;
      margin: 0 auto 1.5rem;
      font-size: 1rem;
      padding: 0.6rem;
      border-radius: 8px;
      border: 1px solid #ccc;
      width: 200px;
    }

    #results {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
      gap: 1.2rem;
      padding: 0.5rem;
    }

    .tile {
      background: white;
      border-radius: 12px;
      padding: 1rem;
      box-shadow: 0 2px 12px rgba(0,0,0,0.05);
      transition: transform 0.2s;
    }

    .tile:hover {
      transform: translateY(-5px);
    }

    .tile h3 {
      margin: 0 0 0.5rem;
      font-size: 1.2rem;
      color: #333;
    }

    .tile p {
      margin: 0.3rem 0;
      color: #555;
      font-size: 0.95rem;
    }

    .tile a {
      color: #007bff;
      text-decoration: none;
    }

    .tile a:hover {
      text-decoration: underline;
    }

    .tile-icon {
      font-size: 2rem;
      margin-bottom: 0.5rem;
      color: #007bff;
    }

    .no-results {
      text-align: center;
      margin-top: 2rem;
      color: #999;
    }

    .loading {
      text-align: center;
      font-size: 1.5rem;
      color: #007bff;
      padding: 1rem;
    }
  </style>
</head>
<body>
  <h1>üìç Nearby Places</h1>

  <select id="type-select">
    <option value="food">üçΩÔ∏è Food</option>
    <option value="library">üìö Library</option>
    <option value="atm">üèß ATM</option>
  </select>

  <button id="search-button">Search Nearby Places</button>

  <div id="results"></div>

  <div id="loading" class="loading" style="display: none;">Loading...</div>

  <script>
    async function fetchPlaces(lat, lon, type) {
      const res = await fetch('/places/search', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ lat, lon, type })
      });
      return await res.json();
    }

    function renderPlaces(places, type) {
      const container = document.getElementById('results');
      container.innerHTML = ''; // Clear the container first

      if (!places.length) {
        container.innerHTML = `<p class="no-results">No ${type} places found nearby.</p>`;
        return;
      }

      const icons = {
        food: 'üçΩÔ∏è',
        library: 'üìö',
        atm: 'üèß'
      };

      places.forEach(place => {
        const mapsLink = `https://www.openstreetmap.org/?mlat=${place.lat}&mlon=${place.lon}#map=18/${place.lat}/${place.lon}`;
        const addressHTML = place.address && place.address !== 'Location not specified'
          ? place.address
          : `<a href="${mapsLink}" target="_blank" rel="noopener">üìç View on map</a>`;

        const tile = document.createElement('div');
        tile.className = 'tile';
        tile.innerHTML = `
          <div class="tile-icon">${icons[type] || 'üìç'}</div>
          <h3>${place.name}</h3>
          <p>${addressHTML}</p>
        `;
        container.appendChild(tile);
      });
    }

    function getLocationAndSearch() {
      const type = document.getElementById('type-select').value;
      document.getElementById('loading').style.display = 'block';  // Show loading

      navigator.geolocation.getCurrentPosition(async (pos) => {
        const lat = pos.coords.latitude;
        const lon = pos.coords.longitude;
        const { places = [] } = await fetchPlaces(lat, lon, type);
        renderPlaces(places, type);

        document.getElementById('loading').style.display = 'none';  // Hide loading
      }, () => {
        alert("Please allow location access to see nearby places.");
        document.getElementById('loading').style.display = 'none';  // Hide loading
      });
    }

    document.getElementById('search-button').addEventListener('click', getLocationAndSearch);
    document.getElementById('type-select').addEventListener('change', getLocationAndSearch);
  </script>
</body>
</html>
