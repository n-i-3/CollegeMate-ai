<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>CollegeMate-ai 🤖</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    :root {
      --bg-light: #f0f2f5;
      --bg-dark: #121212;
      --text-light: #222;
      --text-dark: #f1f1f1;
      --user: #007bff;
      --bot: #e5e5ea;
      --bot-dark: #2c2c2e;
    }

    body {
      font-family: 'Inter', sans-serif;
      background-color: var(--bg-light);
      color: var(--text-light);
      margin: 0;
      padding: 1rem;
      transition: background 0.3s ease, color 0.3s ease;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
      align-items: center;
    }

    body.dark {
      background-color: var(--bg-dark);
      color: var(--text-dark);
    }

    /* Centered Title */
    h1 {
      font-size: 2rem;
      font-weight: 600;
      text-align: center;
      margin-top: 30px;
      color: var(--user);
    }

    body.dark h1 {
      color: var(--text-dark);
    }

    /* Chat Box */
    #chat-box {
      flex: 1;
      max-width: 600px;
      width: 100%;
      margin: 20px auto;
      overflow-y: auto;
      background: white;
      border-radius: 12px;
      padding: 1rem;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      padding-bottom: 100px; /* new: leave space for input box */
      display: flex;
      flex-direction: column;
    }

    body.dark #chat-box {
      background-color: #1f1f1f;
    }

    /* Chat bubbles */
    .bubble {
      margin: 0.5rem 0;
      padding: 0.75rem 1rem;
      border-radius: 16px;
      max-width: 80%;
      white-space: pre-wrap;
      line-height: 1.4;
      width: fit-content;
      word-break: break-word;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }

    .user {
      background-color: var(--user);
      color: white;
      align-self: flex-end;
      margin-left: auto;
      text-align: right;
    }

    .bot {
      background-color: var(--bot);
      color: var(--text-light);
      align-self: flex-start;
      margin-right: auto;
    }

    body.dark .bot {
      background-color: var(--bot-dark);
      color: var(--text-dark);
    }

    #chat-form {
      position: sticky;  /* changed: sticky instead of fixed */
      bottom: 0;
      background: var(--bg-light);  /* ensures background behind input */
      padding: 10px;
      max-width: 600px;
      width: 100%;
      display: flex;
      gap: 10px;
    }

    body.dark #chat-form {
      background: var(--bg-dark);
    }

    #user-input {
      flex: 1;
      padding: 0.75rem;
      border-radius: 12px;
      border: 1px solid #ccc;
      font-size: 1rem;
    }

    button {
      background-color: var(--user);
      color: white;
      border: none;
      border-radius: 12px;
      padding: 0.75rem 1rem;
      font-weight: bold;
      cursor: pointer;
      transition: opacity 0.3s ease;
    }

    button:hover {
      opacity: 0.9;
    }

    #chat-form input,
    #chat-form button {
      border-radius: 12px;
    }

    /* Cool Toggle Button */
    .toggle-dark {
      position: fixed;
      top: 20px;
      right: 20px;
      cursor: pointer;
      font-size: 1.4rem;
      color: var(--user);
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 10px;
      background: #f0f2f5;
      border-radius: 50%;
      transition: all 0.3s ease;
      user-select: none;
    }

    .toggle-dark:hover {
      background-color: #007bff;
      color: white;
    }

    body.dark .toggle-dark {
      background: #1f1f1f;
      color: white;
    }
  </style>
</head>
<body>
  <!-- Dark Mode Toggle -->
  <div class="toggle-dark" id="toggle-dark">🌙</div>

  <!-- Centered Title -->
  <h1>CollegeMate-ai 🤖</h1>

  <div id="chat-box"></div>

  <form id="chat-form">
    <input type="text" id="user-input" placeholder="Ask me anything..." required>
    <button type="submit">Send</button>
  </form>

  <script>
    const chatBox = document.getElementById('chat-box');
    const form = document.getElementById('chat-form');
    const input = document.getElementById('user-input');
    const toggleDark = document.getElementById('toggle-dark');

    // Toggle dark mode
    toggleDark.addEventListener('click', () => {
      document.body.classList.toggle('dark');
      toggleDark.textContent = document.body.classList.contains('dark') ? '☀️' : '🌙';
    });

    // Chat functionality
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const userText = input.value.trim();
      if (!userText) return;

      addMessage(userText, 'user');
      input.value = '';

      // Add typing indicator for bot
      addMessage('...', 'bot', true); // true flag indicates typing animation

      const res = await fetch('/chat', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ message: userText })
      });

      const data = await res.json();
      const botReply = data.reply;

      // Replace typing indicator with the actual response after a delay
      setTimeout(() => {
        const lastMessage = chatBox.lastChild;
        lastMessage.remove();  // Remove the typing indicator
        addMessage(botReply, 'bot');  // Add the actual bot reply
      }, 1000); // Adjust delay time (1000ms = 1 second)
    });

    // Add message to chat
    function addMessage(text, role, isTyping = false) {
      const bubble = document.createElement('div');
      bubble.classList.add('bubble', role);
      bubble.textContent = text;

      if (isTyping) {
        bubble.textContent = '...'; // Set text for typing animation
      }

      chatBox.appendChild(bubble);
      chatBox.scrollTop = chatBox.scrollHeight; // Scroll to the latest message
    }
  </script>
</body>
</html>
